import { createBasicClass } from '@factories/index';

export const pipesInstall = {
  providers: `<div style="margin: 5px 0;"><div><div><span style="color: #b96ad9;">import </span>{ <span style="color: #169179;">DatePipe, DecimalPipe</span> } <span style="color: #b96ad9;">from</span> <span style="color: #e03e2d;">'@angular/common'</span>;</div><div>@<span style="color: #169179;">NgModule({
      </span> <span style="color: #3598db;">providers</span>: <span style="color: #b96ad9;">[<div><span style="color: #169179;">          DatePipe ,</span><span style="color: #999999;"> // for date pipe function</span><div><div><span style="color: #169179;">          DecimalPipe</span><span style="color: #999999;"> // for decimal pipe function</span><div>       ]</span> <span style="color: #169179;">
      })</span></div></div></div><div style="margin: 5px 0;"><span style="color: #b96ad9;">export</span> <span style="color: #3598db;">class</span> <span style="color: #169179;">AppModule</span> { }</div>`,
  inject: createBasicClass(
    [{ import: 'PipesService', from: 'assaf-prime-lib/services' }],
    `<p><span style="color: #b96ad9;">constructor (private </span> <span style="color: #169179;">__pipes</span>: <span style="color: #169179;">PipesService</span><span style="color: #b96ad9;">){}
    `
  ),
  tableExample: createBasicClass(
    [
      {
        import: 'PipesService ,TableColumn',
        from: 'assaf-prime-lib/services',
      },
    ],
    `<p><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span><span style="color: #b96ad9;">&nbsp;(private&nbsp;</span> <span style="color: #169179;">__pipes</span>:&nbsp;<span style="color: #169179;">PipesService</span><span style="color: #b96ad9;">){}&nbsp;</span><br><span style="color: #169179;">&nbsp; &nbsp; userTable</span> :&nbsp;<span style="color: #169179;">Array &lt;TableColumn&gt;</span> = [<br> &nbsp; &nbsp; &nbsp; { <span style="color: rgb(61, 142, 185);">title</span>: &apos;First Name&apos;,<span style="color:rgb(61, 142, 185);">type</span>: &apos;text&apos; ,<span style="color:rgb(61, 142, 185);">dataKey</span>: &apos;firstName&apos; },&nbsp;<br>&nbsp; &nbsp; &nbsp; { <span style="color: rgb(61, 142, 185);">title</span>: &apos;Salary&apos;,<span style="color:rgb(61, 142, 185);">type</span>: &apos;text&apos; ,<span style="color:rgb(61, 142, 185);">dataKey</span>: &apos;salary&apos; , <span style="color: #169179;">pipe</span>: <span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;">number</span> <span style="color: #169179;">&nbsp;</span><span style="color: rgb(0, 0, 0);">}</span><br><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp; ]</span></p>
    `
  ),
  example: createBasicClass(
    [{ import: 'PipesService', from: 'assaf-prime-lib/services' }],
    `<p><span style="color: rgb(85, 57, 130);">&nbsp; &nbsp; constructor</span><span style="color: #b96ad9;">&nbsp;(private&nbsp;</span> <span style="color: #169179;">__pipes</span>: <span style="color: rgb(65, 168, 95);">PipesService</span><span style="color: #b96ad9;">){}&nbsp;</span></p>
<div style="margin: 5px 0;"><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; ngOnInit() {</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: rgb(0, 168, 133);">pi</span>: <span style="color: rgb(65, 168, 95);">number</span> = <span style="color: rgb(40, 50, 78);">3.14159265359</span>;<span style="color: #999999;">&nbsp;</span><br><span style="color: rgb(0, 0, 0);">&nbsp; &nbsp; &nbsp; console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: rgb(41, 105, 176);">this.__pipes</span>.<span style="color: rgb(243, 121, 52);">number(</span><span style="color: #169179;">pi</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output =3.14,159,265,359</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">percent</span>:<span style="color: #169179;">string</span> =<span style="color: #333300;">&apos;0.89&apos;</span>;<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">percentage(</span>percent<span style="color: rgb(243, 121, 52);">))</span></span>;<span style="color: #999999;">&nbsp;//output = 0.89 %&nbsp;</span><br><span style="color: #999999;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style="color: #5539d9;">const&nbsp;</span><span style="color: #169179;">name</span>:<span style="color: #169179;">string</span> =<span style="color: #f5bd07;"><span style="color: #333300;">&nbsp;&apos;ahmed&apos;</span><span style="color: #000000;">;</span></span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">upperCase(</span>name<span style="color: rgb(243, 121, 52);">))</span></span>; <span style="color: #999999;">//output = AHMED</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">name2</span>:<span style="color: #169179;">string</span> = <span style="color: #f5bd07;"><span style="color: #333300;">&apos;Chips&apos;</span><span style="color: #000000;">;</span></span><br><span style="color: #f5bd07;"><span style="color: #000000;">&nbsp; &nbsp; &nbsp;&nbsp;</span></span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">lowerCase(</span>name2<span style="color: rgb(243, 121, 52);">))</span></span>;<span style="color: #999999;">&nbsp;//output = Chips</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">today</span>:<span style="color: #169179;">Date</span> =<span style="color: #169179;">new&nbsp;</span>Date();<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">date(</span>today<span style="color: rgb(243, 121, 52);">))</span></span>; <span style="color: #999999;">//output = Mar 21, 2023</span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: rgb(243, 121, 52);">date(</span><span style="color: #169179;">today&nbsp;</span>, <span style="color: #333300;">&apos;short&apos;</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output = 3/21/23, 11:34&nbsp;</span><br><span style="color: #999999;">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: rgb(243, 121, 52);">date(</span><span style="color: #169179;">today&nbsp;</span>, <span style="color: #333300;">&apos;medium&apos;</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output = March 21, 2023 at 11:34:54 AM GMT+2</span><br><span style="color: #999999;">&nbsp; &nbsp; &nbsp; // for rest of format follow this <span style="color: #169179;">link</span> <a href="https://angular.io/api/common/DatePipe" style="text-decoration: underline;">https://angular.io/api/common/DatePipe</a></span><br><span style="color: #b96ad9;"><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const</span>&nbsp;</span><span style="color: #169179;">decimalNum</span>:<span style="color: #169179;">number</span> =&nbsp;<span style="color: #cc99ff;">342.7844214</span>;<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">decimal(</span>decimalNum<span style="color: rgb(243, 121, 52);">))</span></span>; <span style="color: #999999;">//output = 342.785</span><br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">decimal(</span>decimalNum&nbsp;</span>, <span style="color: #333300;">&apos;4.2-5&apos;</span><span style="color: rgb(243, 121, 52);">))</span>;<span style="color: #999999;">&nbsp;//output = 0,342.78442</span><br><span style="color: #5539d9;">&nbsp; &nbsp; &nbsp; const&nbsp;</span><span style="color: #169179;">decimalNum2</span>:<span style="color: #169179;">number</span> =&nbsp;<span style="color: #cc99ff;">0.74</span>;<br><span style="color: rgb(243, 121, 52);">&nbsp; &nbsp; &nbsp; </span><span style="color: rgb(0, 0, 0);">console</span><span style="color: rgb(243, 121, 52);">.log(</span><span style="color: #3598db;">this</span>.<span style="color: #b96ad9;">__pipes</span>.<span style="color: #169179;"><span style="color: rgb(243, 121, 52);">decimal(</span>decimalNum2&nbsp;</span>, <span style="color: #333300;">&apos;1.0-0&apos;</span><span style="color: rgb(243, 121, 52);">))</span>; <span style="color: #999999;">//output = 1</span><br><span style="color: #169179;">&nbsp; &nbsp; }</span></div>`
  ),
};
